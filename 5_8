fun main() {
    input()
}

fun input() {
    while (true) {
        val input = readln()
        when {
            input == "/exit" -> {
                println("Bye!")
                break
            }

            input == "/help" -> {
                println("The program calculates the sum of numbers")
                continue
            }

            input.isEmpty() -> continue
            input.matches("/.*".toRegex()) -> println("Unknown command")
            input.matches("-?\\+?\\d+".toRegex()) -> handleSingleDigit(input)
            input.matches("(-?\\d+\\s+[+-]+\\s+)+-?\\d+".toRegex()) -> handleInputString(input)
            else -> println("Invalid expression")
        }
    }
}

fun handleInputString(input: String) {
    val numbers = mutableListOf<Int>()
    val actions = mutableListOf<String>()
    val str = input.split("\\s+".toRegex())
    for (s in str) {
        when {
            s.matches("-?\\d+".toRegex()) -> numbers.add(s.toInt())
            s.contains('-') || s.contains('+') -> actions.add(if (s.count { it == '-' } % 2 == 0) "+" else "-")
        }
    }
    val result = numbers.reduceIndexed { index, acc, i -> acc.plusOrMinus(i, actions[index - 1]) }
    println(result)
}

fun Int.plusOrMinus(i: Int, s: String) = if (s == "+") this + i else this - i

fun handleSingleDigit(digit: String) = println(
    if (digit.matches("-?\\d+".toRegex())) digit
    else "\\d+".toRegex().find(digit)?.value.toString()
)
